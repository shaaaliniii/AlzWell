<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Location History</title>
  <script src="https://api.mapbox.com/mapbox-gl-js/v2.15.0/mapbox-gl.js"></script>
  <link href="https://api.mapbox.com/mapbox-gl-js/v2.15.0/mapbox-gl.css" rel="stylesheet">
  <style>
    body { font-family: Arial, sans-serif; margin: 0; padding: 0; }
    h1 { text-align: center; margin-top: 20px; }
    #map { width: 100%; height: 500px; margin-top: 20px; }
    #info { text-align: center; margin-top: 10px; }
  </style>
</head>
<body>
  <h1>User Location History</h1>
  <div id="info">Tracking and displaying the travel path...</div>
  <div id="map"></div>

  <script>
    mapboxgl.accessToken = '<%= mapboxToken %>';
    const userId = '<%= userId %>';

    const map = new mapboxgl.Map({
      container: 'map',
      style: 'mapbox://styles/mapbox/streets-v11',
      center: [81.76699647275346, 21.1361605544761], // Default center (can be updated to current location)
      zoom: 12
    });

    // Function to fetch location history
    async function fetchLocationHistory() {
      try {
        const response = await fetch(`/api/user/${userId}`);
        const data = await response.json();

        if (data.locationHistory && data.locationHistory.length > 0) {
          const coordinates = data.locationHistory.map(loc => [loc.longitude, loc.latitude]);

          // Highlight the route
          map.addSource('route', {
            'type': 'geojson',
            'data': {
              'type': 'Feature',
              'geometry': {
                'type': 'LineString',
                'coordinates': coordinates
              }
            }
          });

          map.addLayer({
            'id': 'route',
            'type': 'line',
            'source': 'route',
            'layout': { 'line-join': 'round', 'line-cap': 'round' },
            'paint': { 'line-color': '#FF5733', 'line-width': 4 }
          });

          // Add markers for each location in history
          coordinates.forEach(([lon, lat]) => {
            new mapboxgl.Marker().setLngLat([lon, lat]).addTo(map);
          });

          // Adjust the map view to fit all coordinates
          const bounds = coordinates.reduce((bounds, coord) => bounds.extend(coord), new mapboxgl.LngLatBounds(coordinates[0], coordinates[0]));
          map.fitBounds(bounds, { padding: 50 });
        } else {
          document.getElementById('info').innerText = 'No location data available.';
        }
      } catch (error) {
        console.error('Error fetching location history:', error);
      }
    }

    // Function to get current location and display on map
    function showCurrentLocation() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition((position) => {
          const latitude = position.coords.latitude;
          const longitude = position.coords.longitude;

          // Center the map to the current location
          map.setCenter([longitude, latitude]);
          map.setZoom(15);

          // Add a marker for the current location
          new mapboxgl.Marker({ color: 'blue' })
            .setLngLat([longitude, latitude])
            .addTo(map);

          // Display current location info
        }, (error) => {
          console.error('Error getting geolocation:', error);
          document.getElementById('info').innerText = 'Error getting current location.';
        });
      } else {
        document.getElementById('info').innerText = 'Geolocation is not supported by this browser.';
      }
    }

    // Fetch location history and display current location when the map is loaded
    map.on('load', () => {
      fetchLocationHistory();
      showCurrentLocation(); // Show current location with marker
    });
  </script>
</body>
</html>
